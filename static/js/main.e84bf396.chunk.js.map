{"version":3,"sources":["components/Task.js","contexts/TaskContext.js","components/TodoList.js","components/AddTaskBar.js","App.js","index.js"],"names":["Task","props","useState","isChecked","setIsChecked","className","type","onChange","event","target","checked","text","TaskContext","createContext","TasksProvider","tasks","setTasks","lastTaskId","setLastTaskId","Provider","value","addTask","taskText","newTaskId","id","children","TodoList","useContext","title","console","log","map","task","key","defaultProps","AddTaskBar","newTaskText","setTaskText","placeholder","onClick","App","Component","ReactDOM","render","document","getElementById"],"mappings":"gTAgBeA,MAdf,SAAcC,GAAQ,IAAD,EACeC,oBAAS,GADxB,mBACZC,EADY,KACDC,EADC,KAGnB,OACE,yBAAKC,UAAU,aACb,2BACEC,KAAK,WACLC,SAAU,SAAAC,GAAK,OAAIJ,EAAaI,EAAMC,OAAOC,YAE9CP,EAAY,6BAAMF,EAAMU,MAAcV,EAAMU,O,OCT7CC,EAAcC,0BAEPC,EAAgB,SAAAb,GAAU,IAAD,EACRC,mBAAS,IADD,mBAC3Ba,EAD2B,KACpBC,EADoB,OAEEd,mBAAS,GAFX,mBAE3Be,EAF2B,KAEfC,EAFe,KAUlC,OACI,kBAACN,EAAYO,SAAb,CAAsBC,MAAO,CAAEL,QAAOM,QAP1B,SAAAC,GACZ,IAAMC,EAAYN,EAAW,EAC7BD,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACS,GAAID,EAAWZ,KAAMW,MAC1CJ,EAAcK,MAKTtB,EAAMwB,WAKJb,IChBf,SAASc,EAASzB,GAAQ,IAChBc,EAAUY,qBAAWf,GAArBG,MACAa,EAAU3B,EAAV2B,MAGR,OADAC,QAAQC,IAAIf,GAEV,yBAAKV,UAAU,0BACb,wBAAIA,UAAU,+BAA+BuB,GAC5Cb,EAAMgB,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAMC,IAAKD,EAAKR,GAAIb,KAAMqB,EAAKrB,WAKvCe,EAASQ,aAAe,CACtBN,MAAO,WAMMF,QCLAS,MAlBf,WAAuB,IAAD,EACejC,mBAAS,IADxB,mBACbkC,EADa,KACAC,EADA,KAEZhB,EAAYM,qBAAWf,GAAvBS,QAER,OACE,6BACE,2BACEhB,UAAU,SACVC,KAAK,OACLgC,YAAY,WACZ/B,SAAU,SAAAC,GAAK,OAAI6B,EAAY7B,EAAMC,OAAOW,UAE9C,4BAAQf,UAAU,SAASkC,QAAS,kBAAIlB,EAAQe,KAC9C,uBAAG/B,UAAU,mBCKNmC,E,iLAbX,OACE,kBAAC,EAAD,KACA,yBAAKnC,UAAU,OACb,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAd,mBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GARUoC,aCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e84bf396.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Task(props) {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  return (\r\n    <div className='task-item'>\r\n      <input\r\n        type='checkbox'\r\n        onChange={event => setIsChecked(event.target.checked)}\r\n      />\r\n      {isChecked ? <del>{props.text}</del> : props.text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst TaskContext = createContext();\r\n\r\nexport const TasksProvider = props => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [lastTaskId, setLastTaskId] = useState(0);\r\n\r\n    const addTask = taskText => {\r\n        const newTaskId = lastTaskId+1;\r\n        setTasks([...tasks, {id: newTaskId, text: taskText}]);\r\n        setLastTaskId(newTaskId);\r\n    };\r\n\r\n    return (\r\n        <TaskContext.Provider value={{ tasks, addTask }}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TaskContext;","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from './Task';\r\nimport TaskContext from '../contexts/TaskContext';\r\n\r\nfunction TodoList(props) {\r\n  const { tasks } = useContext(TaskContext);\r\n  const { title } = props;\r\n\r\n  console.log(tasks);\r\n  return (\r\n    <div className='container small-margin'>\r\n      <h2 className='no-margin header-underscore'>{title}</h2>\r\n      {tasks.map(task => (\r\n        <Task key={task.id} text={task.text} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nTodoList.defaultProps = {\r\n  title: 'My List'\r\n};\r\nTodoList.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useContext } from 'react';\r\nimport TaskContext from '../contexts/TaskContext'\r\n\r\nfunction AddTaskBar() {\r\n  const [newTaskText, setTaskText] = useState('');\r\n  const { addTask } = useContext(TaskContext);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className='button'\r\n        type='text'\r\n        placeholder='New task'\r\n        onChange={event => setTaskText(event.target.value)}\r\n      />\r\n      <button className='button' onClick={()=>addTask(newTaskText)}>\r\n        <i className='fas fa-plus'></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default AddTaskBar;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList'\nimport AddTaskBar from './components/AddTaskBar'\nimport { TasksProvider } from './contexts/TaskContext'\n\nclass App extends Component {\n  render() {\n    return (\n      <TasksProvider>\n      <div className='App'>\n        <h1 className=\"no-margin\">Todo List</h1>\n        <h4 className=\"no-margin\">by Wojciech Kud</h4>\n        <AddTaskBar/>\n        <TodoList/>\n      </div>\n      </TasksProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}